#!/bin/bash

RETRY=${RETRY:-"2s"}
INTERVAL=${INTERVAL:-"5m"}

source ./logging

failed-wait-and-retry() {
  if [[ -f /healthy ]]
  then
    rm /healthy
  fi
  log-debug "${BOLD}Retrying${RESET} in ${RETRY}"
  sleep "${RETRY}"
}

success-wait() {
  touch /healthy
  log-debug "${BOLD}Waiting${RESET} ${INTERVAL} before next run"
  sleep "${INTERVAL}"
}

# Validate environment variables
ISSUES=()
if [[ -z "${GLUETUN_API_PORT}" ]]
then
  GLUETUN_API_PORT=${GLUETUN_API_PORT:-"8000"}
  log-information "GLUETUN_API_PORT is not set. Defaulting to ${GLUETUN_API_PORT}"
fi
if [[ -z "${DELUGE_WEB_PORT}" ]]
then
  DELUGE_WEB_PORT=${DELUGE_WEB_PORT:-"8112"}
  log-information "DELUGE_WEB_PORT is not set. Defaulting to ${DELUGE_WEB_PORT}"
fi
if [[ -z "${DELUGE_PASSWORD}" ]]
then
  ISSUES+=("DELUGE_PASSWORD")
fi
if [[ "${#ISSUES[@]}" -gt 0 ]]
then
  log-error "Missing environment variables: ${ISSUES[*]}"
  log-critical "Unable to continue"
  sleep infinity
fi

while true
do
  log-information "${BOLD}Running${RESET} monitor"

  log-debug "${BOLD}Requesting${RESET} forwarded port from Gluetun"
  JSON=$(curl --fail --silent --show-error "http://localhost:${GLUETUN_API_PORT}/v1/openvpn/portforwarded")
  PORT=$(echo "${JSON}" | jq -r '.port')
  if [[ "${JSON}" == "" ]]
  then
    log-error "${BOLD}Empty${RESET} response from Gluetun"
    failed-wait-and-retry
    continue
  elif [[ "${PORT}" == "" ]]
  then
    log-error "Forwarded port is not defined according to Gluetun"
    log-trace "${JSON}"
    failed-wait-and-retry
    continue
  elif [[ "${PORT}" == "0" ]]
  then
    log-error "Forwarded port is 0 according to Gluetun"
    log-trace "${JSON}"
    failed-wait-and-retry
    continue
  elif [[ -f /port && $(cat /port) == "${PORT}" ]]
  then
    log-debug "Port is already set to ${PORT}"
    success-wait
    continue
  fi

  log-debug "${BOLD}Authenticating${RESET} with Deluge API"
  JSON=$(curl --fail-with-body --silent \
    --header "Content-Type: application/json" \
    --data '{"method": "auth.login", "params": ["'"${DELUGE_PASSWORD}"'"], "id": '${RANDOM}'}' \
    --cookie-jar /tmp/deluge-cookie \
    "http://localhost:${DELUGE_WEB_PORT}/json")
  if [[ "${JSON}" == "" ]]
  then
    log-error "${BOLD}Empty${RESET} response from Deluge API"
    failed-wait-and-retry
    continue
  elif [[ $(echo "${JSON}" | jq -r '.result') != "true" || $(echo "${JSON}" | jq -r '.error') != "null" ]]
  then
    log-error "${BOLD}Failed${RESET} to authenticate with Deluge API"
    log-trace "${JSON}"
    failed-wait-and-retry
    continue
  fi

  log-debug "${BOLD}Checking${RESET} Deluge daemon connection"
  JSON=$(curl --fail-with-body --silent \
    --header "Content-Type: application/json" \
    --data '{"method": "web.connected", "params": [], "id": '${RANDOM}'}' \
    --cookie /tmp/deluge-cookie \
    "http://localhost:${DELUGE_WEB_PORT}/json")
  if [[ $(echo "${JSON}" | jq -r '.result') != "true" || $(echo "${JSON}" | jq -r '.error') != "null" ]]
  then
    log-warning "Deluge daemon is not connected. Will attempt to connect"
    log-trace "${JSON}"

    log-debug "${BOLD}Listing${RESET} daemons"
    JSON=$(curl --fail-with-body --silent \
      --header "Content-Type: application/json" \
      --data '{"method": "web.get_hosts", "params": [], "id": '${RANDOM}'}' \
      --cookie /tmp/deluge-cookie \
      "http://localhost:${DELUGE_WEB_PORT}/json")
    log-trace "${JSON}"
    if [[ $(echo "${JSON}" | jq -r '.error') != "null" ]]
    then
      log-error "${BOLD}Failed${RESET} to list daemons"
      log-trace "${JSON}"
      failed-wait-and-retry
      continue
    fi

    HOST_ID=$(echo "${JSON}" | jq -r '.result[0][0]')
    log-debug "${BOLD}Connecting${RESET} web client to daemon ${HOST_ID}"
    JSON=$(curl --fail-with-body --silent \
      --header "Content-Type: application/json" \
      --data '{"method": "web.connect", "params": ["'"${HOST_ID}"'"], "id": '${RANDOM}'}' \
      --cookie /tmp/deluge-cookie \
      "http://localhost:${DELUGE_WEB_PORT}/json")
    if [[ $(echo "${JSON}" | jq -r '.error') != "null" ]]
    then
      log-error "${BOLD}Failed${RESET} to connect Deluge web client to daemon"
      log-trace "${JSON}"
      failed-wait-and-retry
      continue
    fi
  fi

  log-debug "${BOLD}Setting${RESET} listen port"
  JSON=$(curl --fail-with-body --silent \
    --header "Content-Type: application/json" \
    --data '{"method": "core.set_config", "params": [{"listen_ports": ['"${PORT}"','"${PORT}"']}], "id": '${RANDOM}'}' \
    --cookie /tmp/deluge-cookie \
    "http://localhost:${DELUGE_WEB_PORT}/json")
  if [[ $(echo "${JSON}" | jq -r '.error') != "null" ]]
  then
    if [[ $(echo "${JSON}" | jq -r '.error.message') == "Unknown method" ]]
    then
      log-error "Deluge daemon is probably not connected"
    else
      log-error "${BOLD}Failed${RESET} to set listen port"
    fi
    log-trace "${JSON}"
    failed-wait-and-retry
    continue
  fi

  log-success "${BOLD}Set${RESET} listen port to ${PORT}"
  touch /port
  echo "${PORT}" > /port
  success-wait
  continue
done

echo "Service terminated"

exit 1
